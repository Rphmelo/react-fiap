{"version":3,"sources":["assets/react_shop_app_logo.png","pages/search/index.jsx","pages/product/index.jsx","routes.jsx","components/header/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearch","bind","assertThisInitialized","state","results","event","_this2","console","log","currentTarget","value","axios","get","concat","then","data","setState","item","react_default","a","createElement","className","key","id","title","react_router_dom","to","react","type","onChange","htmlFor","map","renderItem","Component","Product","props","match","params","loading","all","_ref","_ref2","slicedToArray","description","objectSpread","plain_text","catch","err","_this$state","price","pictures","seller_address","src","url","alt","city","name","Routes","react_router","exact","path","component","Header","logo","App","header","routes","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f423664.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/react_shop_app_logo.913d00d9.png\";","    \nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './style.css';\nclass Search extends Component {\n    constructor(){\n        super();\n\n        this.onSearch = this.onSearch.bind(this);\n        this.state = {\n            results: [],\n        };\n    }\n\n    onSearch(event) {\n        console.log(event.currentTarget.value);\n        const value = event.currentTarget.value;\n\n        axios.get(`https://api.mercadolibre.com/sites/MLB/search?q=${value}`)\n        .then((data) => {\n            console.log(data);\n            this.setState({\n                results: data.data.results,\n            })\n        })\n    }\n\n    renderItem(item){\n        return (\n            <div className=\"demo-card-square mdl-card mdl-shadow--2dp\" key={item.id}>\n                <div className=\"mdl-card__supporting-text\">\n                    { item.title }\n                </div>\n                <div className=\"mdl-card__actions mdl-card--border\">\n                    <Link to={`/product/${item.id}`}>\n                        <button className=\"mdl-button mdl-js-button mdl-button--raised\">\n                            Ver Produto\n                        </button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"mdl-grid container__search\">\n                    <div className=\"mdl-cell mdl-cell--12-col\">\n                        <div className=\"mdl-textfield mdl-js-textfield\">\n                            <input \n                                className=\"mdl-textfield__input textfield__input__size\" \n                                type=\"text\" \n                                id=\"search\" \n                                onChange={ this.onSearch }\n                                />\n                            <label className=\"mdl-textfield__label\" htmlFor=\"search\">O que vocÃª procura?</label>\n                        </div>\n                \n                        { this.state.results.map(this.renderItem) }\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default Search;","import React, { Component, Fragment } from 'react';\nimport axios from 'axios';\n\nimport './style.css';\n\nclass Product extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: props.match.params.id,\n            loading: true,\n            data: {},\n        };\n    }\n\n    componentDidMount(){\n        axios.all([\n            axios.get(`https://api.mercadolibre.com/items/${this.state.id}`),\n            axios.get(`https://api.mercadolibre.com/items/${this.state.id}/description`)\n        ])\n\n        .then(([item, description]) => {\n            console.log(item, description)\n\n            this.setState({\n                data: {\n                    ...item.data,\n                    description: description.data.plain_text,\n                },\n                loading: false,\n            });\n\n        })\n        .catch((err) => {\n            console.log(err)\n        });\n    }\n\n    render () {\n        const { data, loading } = this.state;\n        const {id, title, price, pictures, seller_address} = data;\n        if(loading){\n            return (\n                <Fragment>\n                    Carregando...\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    <div className=\"demo-card-wide mdl-card mdl-shadow--2dp\">\n                        <div className=\"mdl-grid\" >\n                            <div className=\"mdl-cell mdl-cell--5-col\">\n                                <img className=\"img-product \" src={pictures[0].url } alt={data.title}></img>\n                            </div>\n                            <div className=\"mdl-cell mdl-cell--7-col\">\n                                <div>\n                                    <div>\n                                        <h2> {id}</h2>                                \n                                    </div>\n                                    <div>\n                                        <h3 className=\"mdl-card__title-text\">{title}</h3>\n                                    </div>\n                                    <div>\n                                        <h4>R${price}</h4>                                \n                                    </div>\n                                    <div>\n                                        <h4>{seller_address.city.name}</h4>                                \n                                    </div>\n                                    <div>\n                                        <h4> {seller_address.state.name}</h4>                                \n                                    </div>\n                                </div>\n                            </div>\n                        </div>  \n                    </div>\n                </Fragment>\n            );\n        }\n    }\n}\n\nexport default Product;","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\n\nimport Search from './pages/search';\nimport Product from './pages/product';\n\nconst Routes = () => (\n    <Switch>\n        <Route \n            exact \n            path='/' \n            component={ Search }/>\n        \n        <Route \n            exact \n            path='/product/:id' \n            component={ Product }/>\n        \n        <Route \n            component={ Search }/>\n    </Switch>\n);\nexport default Routes;","import React from 'react';\n\nimport './style.css';\nimport logo from '../../assets/react_shop_app_logo.png';\n\nconst Header = () => (\n    <header className=\"header\">\n        <div className=\"mdl-grid\">\n            <div className=\"mdl-cell--12-col\">\n                <img alt=\"Logo\" src={logo} className=\"header__logo\"/>\n            </div>\n        </div>\n    </header>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './App.css';\n\nimport Routes from './routes';\n\nimport Header from './components/header';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"mdl-layout\">\n        <Router>\n          <Header />\n          <Routes />\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}